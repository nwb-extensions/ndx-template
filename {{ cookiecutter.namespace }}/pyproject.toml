[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "{{ cookiecutter.namespace }}"
version = "{{ cookiecutter.version }}"
authors = [{% for name, email in zip(cookiecutter.author.split(','), cookiecutter.email.split(',')) %}
    { name="{{ name.strip() }}", email="{{ email.strip() }}" },{% endfor %}
]
description = "{{ cookiecutter.description }}"
readme = "README.md"
# requires-python = ">=3.8"
license = {text = "{{ cookiecutter.license }}"}
classifiers = [
    # TODO: add classifiers before release
    # "Programming Language :: Python",
    # "Programming Language :: Python :: 3.8",
    # "Programming Language :: Python :: 3.9",
    # "Programming Language :: Python :: 3.10",
    # "Programming Language :: Python :: 3.11",
    # "Programming Language :: Python :: 3.12",
    # "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    {%- if cookiecutter.license == 'BSD-3' %}
    "License :: OSI Approved :: BSD License",
    {%- elif cookiecutter.license == 'MIT' %}
    "License :: OSI Approved :: MIT License",
    {%- elif cookiecutter.license == 'Apache Software License 2.0' %}
    "License :: OSI Approved :: Apache Software License",
    {%- endif %}
]
keywords = [
    'NeurodataWithoutBorders',
    'NWB',
    'nwb-extension',
    'ndx-extension',
]
dependencies = [
    "pynwb>=2.5.0",
    "hdmf>=3.11.0",
]

# TODO: add URLs before release
# [project.urls]
# "Homepage" = "https://github.com/organization/package"
# "Documentation" = "https://package.readthedocs.io/"
# "Bug Tracker" = "https://github.com/organization/package/issues"
# "Discussions" = "https://github.com/organization/package/discussions"
# "Changelog" = "https://github.com/organization/package/blob/main/CHANGELOG.md"

[tool.hatch.build]
include = [
    "src/pynwb",
    "spec/{{ cookiecutter.namespace }}.extensions.yaml",
    "spec/{{ cookiecutter.namespace }}.namespace.yaml",
]
exclude = [
    "src/pynwb/tests",
]

[tool.hatch.build.targets.wheel]
packages = [
    "src/pynwb/{{ cookiecutter.py_pkg_name }}",
    "spec"
]

[tool.hatch.build.targets.wheel.sources]
"spec" = "{{ cookiecutter.py_pkg_name }}/spec"

[tool.hatch.build.targets.sdist]
include = [
    "src/pynwb",
    "spec/{{ cookiecutter.namespace }}.extensions.yaml",
    "spec/{{ cookiecutter.namespace }}.namespace.yaml",
    "docs",
]
exclude = []

[tool.pytest.ini_options]
addopts = "--cov --cov-report html"

[tool.codespell]
skip = "htmlcov,.git,.mypy_cache,.pytest_cache,.coverage,*.pdf,*.svg,venvs,.tox,hdmf-common-schema,./docs/_build/*,*.ipynb"

[tool.coverage.run]
branch = true
source = ["src/pynwb"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@abstract"
]

[tool.black]
line-length = 120
preview = true
exclude = ".git|.mypy_cache|.tox|.venv|venv|.ipynb_checkpoints|_build/|dist/|__pypackages__|.ipynb|docs/"

[tool.ruff]
select = ["E", "F", "T100", "T201", "T203"]
exclude = [
  ".git",
  ".tox",
  "__pycache__",
  "build/",
  "dist/",
]
line-length = 120

[tool.ruff.per-file-ignores]
"src/spec/create_extension_spec.py" = ["T201"]

[tool.ruff.mccabe]
max-complexity = 17
