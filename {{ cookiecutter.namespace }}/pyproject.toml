[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "{{ cookiecutter.namespace }}"
version = "{{ cookiecutter.version }}"
authors = [{% for name, email in zip(cookiecutter.author.split(','), cookiecutter.email.split(',')) %}
    { name="{{ name.strip() }}", email="{{ email.strip() }}" },{% endfor %}
]
description = "{{ cookiecutter.description }}"
readme = "README.md"
requires-python = ">=3.9"
{%- if cookiecutter.license != 'Other' %}
license = "{{ cookiecutter.license }}"
{%- else %}
# license =   # TODO: add license text or identifier
{%- endif %}
classifiers = [
    # TODO: update these classifiers before release
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    {%- if cookiecutter.license == 'BSD-3-Clause' %}
    "License :: OSI Approved :: BSD License",
    {%- elif cookiecutter.license == 'MIT' %}
    "License :: OSI Approved :: MIT License",
    {%- elif cookiecutter.license == 'Apache-2.0' %}
    "License :: OSI Approved :: Apache Software License",
    {%- endif %}
]
keywords = [
    'NeurodataWithoutBorders',
    'NWB',
    'nwb-extension',
    'ndx-extension',
]
dependencies = [
    "pynwb>=2.8.0",
    "hdmf>=3.14.1",
]

[project.optional-dependencies]
test = [
    "coverage>=7.5.4",
    {%- if cookiecutter.widgets -%}
    "nwbwidgets>=0.11.3",
    {%- endif %}
    "pytest>=8.2.2",
    "pytest-cov>=5.0.0",
    "pytest-subtests>=0.12.1",
    "python-dateutil>=2.8.2",
]

docs = [
    "hdmf-docutils>=0.4.7",
]

dev = [
    "black>=24.4.2",
    "codespell>=2.3.0",
    "pre-commit>=3.5.0",
    "ruff>=0.4.10",
    "{{ cookiecutter.namespace }}[docs,test]",
]

# minimum requirements of project dependencies for testing (see .github/workflows/run_all_tests.yml)
min-reqs = [
    "pynwb==2.8.0",
    "hdmf==3.14.1",
]

# TODO: add URLs before release
# [project.urls]
# "Homepage" = "https://github.com/organization/package"
# "Documentation" = "https://package.readthedocs.io/"
# "Bug Tracker" = "https://github.com/organization/package/issues"
# "Discussions" = "https://github.com/organization/package/discussions"
# "Changelog" = "https://github.com/organization/package/blob/main/CHANGELOG.md"

# Include only the source code under `src/pynwb/{{ cookiecutter.py_pkg_name }}` and the spec files under `spec`
# in the wheel.
[tool.hatch.build.targets.wheel]
packages = [
    "src/pynwb/{{ cookiecutter.py_pkg_name }}",
    "spec"
]

# Rewrite the path to the `spec` directory to `{{ cookiecutter.py_pkg_name }}/spec`.
# `{{ cookiecutter.py_pkg_name }}/__init__.py` will look there first for the spec files.
# The resulting directory structure within the wheel will be:
# {{ cookiecutter.py_pkg_name }}/
# ├── __init__.py
# ├── spec
# └── widgets
[tool.hatch.build.targets.wheel.sources]
"spec" = "{{ cookiecutter.py_pkg_name }}/spec"

# The source distribution includes everything in the package except for the `src/matnwb` directory and
# git and github-related files.
[tool.hatch.build.targets.sdist]
exclude = [
    ".git*",
    "src/matnwb",
]

[tool.pytest.ini_options]
# uncomment below to run pytest always with code coverage reporting. NOTE: breakpoints may not work
# addopts = "--cov --cov-report html"

[tool.codespell]
skip = "htmlcov,.git,.mypy_cache,.pytest_cache,.coverage,*.pdf,*.svg,venvs,.tox,./docs/_build/*,*.ipynb"

[tool.coverage.run]
branch = true
source = ["{{ cookiecutter.py_pkg_name }}"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@abstract"
]

[tool.black]
line-length = 120
preview = true
exclude = ".git|.mypy_cache|.tox|.venv|venv|.ipynb_checkpoints|_build/|dist/|__pypackages__|.ipynb|docs/"

[tool.ruff]
lint.select = ["E", "F", "T100", "T201", "T203", "C901"]
exclude = [
  "docs/source/conf.py",
]
line-length = 120

[tool.ruff.lint.per-file-ignores]
"src/pynwb/{{ cookiecutter.py_pkg_name }}/__init__.py" = ["E402", "F401"]
"src/spec/create_extension_spec.py" = ["T201"]

[tool.ruff.lint.mccabe]
max-complexity = 17
